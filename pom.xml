<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.scholastic.dw</groupId>
	<artifactId>sch-wso</artifactId>
	<version>0.0.01-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>sch-wso</name>
	<description>Service to provide catalog to AEM via pushing a FTP file into a S3 and sending kafka notification to EAM</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <cxf.version>3.1.7</cxf.version>
        <cxf.zest.version>2.1</cxf.zest.version>
        <camel.boot.version>2.18.0</camel.boot.version>
        <spring.boot.version>1.4.1.RELEASE</spring.boot.version>
        <jacoco.version>0.7.7.201606060606</jacoco.version>
	     <version.surefire.plugin>2.19.1</version.surefire.plugin>
	     <snapshot.version>${project.version}</snapshot.version>
	    
	     <!--  sonar.host.url>http://sonarqube.ss-prod.us-east-1.schl.local/</sonar.host.url>
	 	 <sonar.projectKey>sch-wso</sonar.projectKey>
	    <sonar.projectName>sch-wso</sonar.projectName>
	    <sonar.projectVersion>develop</sonar.projectVersion>
	    <sonar.sources>./src/main</sonar.sources>
	    <sonar.test.sources>./src/test</sonar.test.sources>
	    <sonar.binaries>./target/classes</sonar.binaries>
	    <sonar.java.binaries>./target/classes</sonar.java.binaries>
	    <sonar.scm.enabled>false</sonar.scm.enabled-->
	
	</properties>
	<dependencyManagement>
	<dependencies>
	
		<dependency>
			<groupId>org.jboss.arquillian</groupId>
			<artifactId>arquillian-bom</artifactId>
			<version>1.1.1.Final</version>
			<scope>import</scope>
			<type>pom</type>
		</dependency>
	</dependencies>
      
	</dependencyManagement>
	<dependencies>
	
<!-- begin sch-wso -->	
   <dependency>
    <groupId>commons-httpclient</groupId>
    <artifactId>commons-httpclient</artifactId>
    <version>3.1</version>
</dependency>
<dependency>
    <groupId>commons-discovery</groupId>
    <artifactId>commons-discovery</artifactId>
    <version>0.4</version>
</dependency>

<dependency>
    <groupId>org.json</groupId>
    <artifactId>json</artifactId>
    <version>20160810</version>
</dependency>

	<dependency>
    <groupId>org.apache.axis</groupId>
    <artifactId>axis</artifactId>
    <version>1.4</version>
</dependency>

<dependency>
    <groupId>javax.xml</groupId>
    <artifactId>jaxrpc-api</artifactId>
    <version>1.1</version>
</dependency>

<dependency>
    <groupId>org.apache.ws.commons.axiom</groupId>
    <artifactId>axiom-impl</artifactId>
    <version>1.2.6</version>
</dependency>

<!--dependency>
    <groupId>org.apache.axis2</groupId>
    <artifactId>axis2-adb</artifactId>
    <version>1.5.4</version>
     <exclusions>
        <exclusion>
          <groupId>servlet-api</groupId> 
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
</dependency-->


       <!-- dependency>
      <groupId>com.scholastic.sps</groupId>
      <artifactId>sps_bo</artifactId>
      <version>2.2.0</version>
    </dependency>
    <dependency>
      <groupId>com.scholastic.sps</groupId>
      <artifactId>sps_sys</artifactId>
      <version>2.2.0</version>
    </dependency -->

     <!-- dependency>
      <groupId>order-history</groupId>
      <artifactId>order-history</artifactId>
      <version>1.0</version>
    </dependency-->

<!-- dependency>
    <groupId>org.apache.xmlbeans</groupId>
    <artifactId>xmlbeans</artifactId>
    <version>2.6.0</version>
</dependency-->
<!-- end sch-wso -->










	
	<dependency>
		    <groupId>net.schmizz</groupId>
		    <artifactId>sshj</artifactId>
		    <version>0.8.1</version>
		</dependency>
		<dependency>
    <groupId>org.apache.velocity</groupId>
    <artifactId>velocity</artifactId>
    <version>1.7</version>
</dependency>

	<dependency>
    <groupId>com.sun.mail</groupId>
    <artifactId>javax.mail</artifactId>
    <version>1.5.6</version>
</dependency>
	
        <dependency>
    <groupId>com.amazonaws</groupId>
    <artifactId>aws-java-sdk</artifactId>
    <version>1.10.44</version>
</dependency>

<dependency>
    <groupId>org.apache.kafka</groupId>
    <artifactId>kafka-clients</artifactId>
    <version>0.8.2.2</version>
</dependency>
        <dependency>
    <groupId>org.apache.servicemix.bundles</groupId>
    <artifactId>org.apache.servicemix.bundles.kafka_2.10</artifactId>
    <version>0.8.2.2_1</version>
</dependency>
<dependency>
    <groupId>net.lingala.zip4j</groupId>
    <artifactId>zip4j</artifactId>
    <version>1.2.3</version>
</dependency>
<dependency>
    <groupId>com.jcraft</groupId>
    <artifactId>jsch</artifactId>
    <version>0.1.42</version>
</dependency>

<dependency>
    <groupId>com.yammer.metrics</groupId>
    <artifactId>metrics-core</artifactId>
    <version>2.2.0</version>
</dependency>
<dependency>
    <groupId>org.scala-lang</groupId>
    <artifactId>scala-library</artifactId>
    <version>2.10.4</version>
</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

        <!-- orchestration -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
            <version>${camel.boot.version}</version>
        </dependency>

        <!-- REST API -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-spring-boot-starter-jaxrs</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>swagger-ui</artifactId>
            <version>2.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-service-description-swagger</artifactId>
            <version>${cxf.version}</version>
        </dependency>
<!-- escape -->

<!-- https://mvnrepository.com/artifact/commons-lang/commons-lang -->
<dependency>
    <groupId>commons-lang</groupId>
    <artifactId>commons-lang</artifactId>
    <version>2.6</version>
</dependency>


        <!-- JSON marshalling support-->
        <dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		    <version>2.2.2</version>
		</dependency>
        <!-- dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		    <version>20090211</version>
		</dependency-->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>2.7.4</version>
        </dependency>

        <!-- metrics and introspection -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-features-metrics</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>

        <!-- testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>3.0.1</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.protocol</groupId>
			<artifactId>arquillian-protocol-servlet</artifactId>
			<scope>test</scope>
		</dependency>
  </dependencies>
  
  
     <profiles>
	   <profile>
	     <id>test</id>
	     <build>
	       <plugins>
	         <plugin>
	           <artifactId>maven-antrun-plugin</artifactId>
	          <executions>
	             <execution>
	               <phase>test</phase>
	               <goals>
	                 <goal>run</goal>
	               </goals>
	               <configuration>
	                 <tasks>
	                   <!-- delete file="${project.build.outputDirectory}/externalProp.properties"/>
	                   <copy file="src/main/resources/externalProp.test.properties"
	                         tofile="${project.build.outputDirectory}/externalProp.properties"/-->
	                 </tasks>
	               </configuration>
	             </execution>
           </executions>
	         </plugin>
	       </plugins>
	     </build>
	   </profile>
	 
	 
	 <profile>
    <id>dev</id>
     <build>
      <plugins> 
          <plugin>
          <artifactId>maven-antrun-plugin</artifactId>

                <executions>
                    <execution>                    
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
 					<tasks>
	                   <!-- delete file="${project.build.outputDirectory}/externalProp.properties"/>
	                   <copy file="src/main/resources/externalProp.dev.properties" tofile="${project.build.outputDirectory}/externalProp.properties"/>
	                   <delete file="${project.build.outputDirectory}/externalProp.dev.properties"/-->
	                 </tasks>
                </configuration>
            </plugin>
         <plugin>
           <artifactId>maven-jar-plugin</artifactId>
           <executions>
             <execution>
               <phase>package</phase>
               <goals>
                 <goal>jar</goal>
               </goals>
               <configuration>
                 <classifier>dev</classifier>
               </configuration>
             </execution>
           </executions>
         </plugin>
       </plugins>
     </build>
   </profile>
   
   	 <profile>
    <id>qa</id>
     <build>
      <plugins> 
          <plugin>
          <artifactId>maven-antrun-plugin</artifactId>

                <executions>
                    <execution>                    
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
 					<tasks>
	                   <!-- delete file="${project.build.outputDirectory}/externalProp.properties"/>
	                   <copy file="src/main/resources/externalProp.qa.properties" tofile="${project.build.outputDirectory}/externalProp.properties"/>
	                   <delete file="${project.build.outputDirectory}/externalProp.prod.properties"/-->
	                 </tasks>
                </configuration>
            </plugin>
         <plugin>
           <artifactId>maven-jar-plugin</artifactId>
           <executions>
             <execution>
               <phase>package</phase>
               <goals>
                 <goal>jar</goal>
               </goals>
               <configuration>
                 <classifier>qa</classifier>
               </configuration>
             </execution>
           </executions>
         </plugin>
       </plugins>
     </build>
   </profile>
   
   <profile>
    <id>prod</id>
     <build>
      <plugins> 
          <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>                    
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
 					<tasks>
	                   <!-- delete file="${project.build.outputDirectory}/externalProp.properties"/>
	                   <copy file="src/main/resources/externalProp.prod.properties" tofile="${project.build.outputDirectory}/externalProp.properties"/>
	                 <delete file="${project.build.outputDirectory}/externalProp.dev.properties"/>
	                 <delete file="${project.build.outputDirectory}/externalProp.qa.properties"/>
	                 <delete file="${project.build.outputDirectory}/externalProp.test.properties"/-->
	                 </tasks>
                </configuration>
            </plugin>
         <plugin>
           <artifactId>maven-jar-plugin</artifactId>
           <executions>
             <execution>
               <phase>package</phase>
               <goals>
                 <goal>jar</goal>
               </goals>
               <configuration>
                 <classifier>prod</classifier>
               </configuration>
             </execution>
           </executions>
         </plugin>
       </plugins>
     </build>
   </profile>
	 
	 </profiles>
  
  <build>
      <plugins>
         
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report-integration</id>
            <goals>
              <goal>report-integration</goal>
            </goals>
          </execution>
          <execution>
            <id>default-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules/>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.0.1</version>
      </plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.surefire.plugin}</version>
			</plugin>
    </plugins>
  </build>
</project>
